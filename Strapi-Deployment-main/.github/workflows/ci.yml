name: CI - Build & Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag & Push Docker Image
        id: docker
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_TAG=latest-${GITHUB_SHA::7}
          IMAGE_URI=$ECR_REGISTRY/${{ secrets.ECR_REPO_NAME }}:$IMAGE_TAG

          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "repo_url=$ECR_REGISTRY/${{ secrets.ECR_REPO_NAME }}" >> $GITHUB_OUTPUT

      - name: Trigger Terraform Deployment
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-terraform
          client-payload: >-
            {
              "image_tag": "${{ steps.docker.outputs.image_tag }}",
              "repo_url": "${{ steps.docker.outputs.repo_url }}"
            }
